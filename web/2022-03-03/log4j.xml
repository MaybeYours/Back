<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd">
<!-- log4j : 장치에 메세지를 기록하는 로그 구현 프로그램 -->
<!-- => log4j.xml 파일에 기록 관련 정보 설정 -->
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<!-- appender : 로그 전달 방식(로그매체)과 로그 형식을 설정하는 엘리먼트 -->
	<!-- name 속성 : appender 엘리먼트를 구분하기 위한 식별자를 속성값으로 설정 -->
	<!-- class 속성 : Appender 인터페이스를 상속받은 로그 구현체 클래스를 속성값으로 설정 -->
	<!-- => https://logging.apache.org/log4j/1.2/apidocs -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<!-- param : Appender 인스턴스에 필요한 값을 제공하는 엘리먼트 -->
		<!-- => Appender 클래스마다 필요한 이름과 값이 다르게 설정 -->
		<!-- name 속성 : 전달값을 구분하기 위한 식별자를 속성값으로 설정 -->
		<!-- value 속성 : 전달값을 속성값으로 설정 -->
		<param name="Target" value="System.out" />
		<!-- layout : 로그 형식을 설정하는 엘리먼트 -->
		<!-- class 속성 : 로그 형식을 제공하는 클래스를 속성값으로 설정 -->
		<!-- => PatternLayout 클래스는 로그 패턴 문자(Conversion Character)를 제공  -->
		<layout class="org.apache.log4j.PatternLayout">
			<!-- param : Layout 인스턴스에 필요한 값을 제공하는 엘리먼트 -->
			<!-- # Conversion Character # -->
			<!-- %c : 패키지가 포함된 클래스 이름을 기록 - {정수값}을 이용하여 원하는 형식으로 기록 가능 -->
			<!-- => %c{1} : 패키지를 제외한 클래스 이름만 기록 -->
			<!-- %d : 날짜와 시간 기록 - {SimpleDateFormatPattern}을 이용하여 원하는 형식으로 기록 가능 -->
			<!-- => %d{yyyy-MM-dd} : [년-월-일] 형식으로 날짜만 기록 -->
			<!-- %m : 로그 메세지 기록 -->
			<!-- %n : 엔터[Enter] 기록 - 로그 줄바꿈 -->
			<!-- %M : 호출 메소드 이름 기록 -->
			<!-- %p : 로그 이벤트 기록 - TRACE > DEBUG > INFO > WARN > ERROR > FATAL -->
			<!-- %r : 처리 시간 기록 -->
			<!-- %f : 처리 스레드 이름 기록 -->
			<!-- # Conversion Character 자릿수 설정 # -->
			<!-- %p : 로그 이벤트의 길이만큼 자릿수를 제공하여 기록 -->
			<!-- %자릿수p : 로그 이벤트를 최대 자릿수를 제공받아 기록 -->
			<!-- %.자릿수p : 로그 이벤트를 최소 자릿수를 제공받아 기록 -->
			<!-- %-자릿수p : 로그 이벤트를 최대 자릿수를 제공받아 기록(왼쪽 정렬) -->
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<appender name="sample" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%c{1} 클래스의 %M 메소드 - %m%n" />
		</layout>
	</appender>
	
	<appender name="deilyLogFile" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="File" value="deilyLog" />
		<param name="DatePattern" value=".yyyy-MM-dd" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{HH:mm:ss}]%-5p %c - %m%n" />
		</layout>
	</appender>

	<!-- logger : 기록자(Appender)를 이용하여 로그를 구현하기 위한 엘리먼트 -->
	<!-- name 속성 : 기록자가 동작될 특정 패키지 경로를 속성값으로 설정 -->	
	<!-- Application Loggers -->
	<logger name="xyz.itwill.controller">
		<!-- level : 로그 이벤트를 설정하기 위한 엘리먼트 -->
		<!-- value 속성 : 로그 이벤트를 속성값으로 설정 -->
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- additivity 속성 : false 또는 true 중 하나를 속성값으로 설정 -->
	<!-- => false : root 엘리먼트의 appender 제외, true(기본값) : root 엘리먼트의 appender 포함 -->
	<logger name="xyz.itwill00.log" additivity="false">
		<level value="info"/>
		<appender-ref ref="sample"/>
		<appender-ref ref="deilyLogFile"/>
	</logger>

	<!-- Root Logger -->
	<!-- root : 최상위 기록 정보(Logger)를 설정하기 위한 엘리먼트 -->
	<!-- => 모든 패키지의 클래스에 기본적으로 적용되는 기록 정보 -->
	<!-- => 모든 logger 엘리먼트는 root 엘리먼트의 기록 정보를 상속받아 상속 -->
	<root>
		<!-- priority : 기본 로그 인벤트를 설정하기 위한 엘리먼트 -->
		<!-- value 속성 : 로그 이벤트를 속성값으로 설정 -->
		<priority value="warn" />
		<!-- appender-ref : 기록자(Appender)를 설정하기 위한 엘리먼트 -->
		<!-- ref 속성 : appender 엘리먼트의 식별자를 속성값으로 설정 -->
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
