<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- StudentDAO 인터페이스를 상속받은 자식클래스를 Spring Bean으로 등록 -->
	<!-- <bean class="xyz.itwill05.di.StudentJdbcDAO" id="studentDAO"/> -->
	<bean class="xyz.itwill05.di.StudentJdbcDAO" id="studentJdbcDAO"/>
	
	<!-- StudentService 인터페이스를 상속받은 자식클래스를 Spring Bean으로 등록 -->
	<!-- StudentServiceImpl 클래스의 studentDAO 필드에 StudentDAO 인터페이스를 상속받은 자식클래스의
	Spring Bean 객체가 저장되도록 설정 - 의존성 주입(DI - Dependency Injection)  -->
	<!-- => property 엘리먼트를 사용하여 필드의 Setter 메소드를 호출하여 수동으로 DI 구현 -->
	<!-- => DI가 구현되지 않을 경우 StudentServiceImpl 클래스의 메소드에서 StudentDAO 인터페이스를
	상속받은 자식클래스 객체의 메소드를 호출할 경우 NullPointerException 발생 -->
	<!-- 
	<bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService">
		<property name="studentDAO" ref="studentDAO"/>
	</bean>
	-->
	
	<!-- autowire 속성 : no(기본), byName, byType, constructor 중 하나를 속성값으로 설정 -->
	<!-- => 의존관계를 Spring Container가 자동으로 구현하기 위한 기능을 제공하는 속성 -->
	<!-- no 속성값 : 자동으로 의존관계를 설정하는 기능을 미제공 -->
	<!-- 
	<bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="no">
		<property name="studentDAO" ref="studentDAO"/>
	</bean>
	-->
	
	<!-- byName 속성값 : 필드명와 같은 이름(beanName)의 Spring Bean 객체를 이용하여 Spring Container가
	자동으로 의존관계 설정 - Setter Injection -->
	<!-- => 필드명과 같은 이름(beanName)의 Spring Bean 객체가 없는 경우 자동으로 의존관계 미설정 - NullPointerException 발생 -->
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byName"/> -->

	<!-- byType 속성값 : 필드의 자료형과 같은 자료형의 Spring Bean 객체를 이용하여 Spring Container가
	자동으로 의존관계 설정 - Setter Injection -->
	<!-- => 필드의 자료형이 인터페이스인 경우 자식클래스의 Spring Bean 객체로 의존관계가 자동 설정 -->
	<bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byType"/>
</beans>





